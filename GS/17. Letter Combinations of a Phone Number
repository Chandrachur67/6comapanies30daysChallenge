class Solution {
    unordered_map<char, string> numToLettersMap;
private:
    void createCombinations(int idx, string& digits, string& curr, vector<string>& ans) {
        if(idx == digits.length()) {
            ans.push_back(curr);
            return;
        }

        string letters = numToLettersMap[digits[idx]];
        for(char c: letters) {
            curr[idx] = c;
            createCombinations(idx +1 , digits, curr, ans);
        }
    }
    
public:
    vector<string> letterCombinations(string digits) {
        vector<string> ans;
        string curr(digits.length(), '.');
        numToLettersMap.clear();
        numToLettersMap = {
                           {'2', "abc"}, {'3', "def"},
            {'4', "ghi"},  {'5', "jkl"}, {'6', "mno"},
            {'7', "pqrs"}, {'8', "tuv"}, {'9', "wxyz"}
        };

        if(digits.length() == 0) return ans;
        createCombinations(0, digits, curr, ans);
        return ans;
    }
};
